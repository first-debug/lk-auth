// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package genqlient

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetUserInfoResponse is returned by GetUserInfo on success.
type GetUserInfoResponse struct {
	UserAuth GetUserInfoUserAuthUserAuthResult `json:"userAuth"`
}

// GetUserAuth returns GetUserInfoResponse.UserAuth, and is useful for accessing the field via an interface.
func (v *GetUserInfoResponse) GetUserAuth() GetUserInfoUserAuthUserAuthResult { return v.UserAuth }

// GetUserInfoUserAuthUserAuthResult includes the requested fields of the GraphQL type UserAuthResult.
type GetUserInfoUserAuthUserAuthResult struct {
	Email        string `json:"email"`
	PasswordHash string `json:"passwordHash"`
	Role         string `json:"role"`
	Version      int    `json:"version"`
}

// GetEmail returns GetUserInfoUserAuthUserAuthResult.Email, and is useful for accessing the field via an interface.
func (v *GetUserInfoUserAuthUserAuthResult) GetEmail() string { return v.Email }

// GetPasswordHash returns GetUserInfoUserAuthUserAuthResult.PasswordHash, and is useful for accessing the field via an interface.
func (v *GetUserInfoUserAuthUserAuthResult) GetPasswordHash() string { return v.PasswordHash }

// GetRole returns GetUserInfoUserAuthUserAuthResult.Role, and is useful for accessing the field via an interface.
func (v *GetUserInfoUserAuthUserAuthResult) GetRole() string { return v.Role }

// GetVersion returns GetUserInfoUserAuthUserAuthResult.Version, and is useful for accessing the field via an interface.
func (v *GetUserInfoUserAuthUserAuthResult) GetVersion() int { return v.Version }

// __GetUserInfoInput is used internally by genqlient
type __GetUserInfoInput struct {
	Email string `json:"Email"`
}

// GetEmail returns __GetUserInfoInput.Email, and is useful for accessing the field via an interface.
func (v *__GetUserInfoInput) GetEmail() string { return v.Email }

// The query executed by GetUserInfo.
const GetUserInfo_Operation = `
query GetUserInfo ($Email: String!) {
	userAuth(email: $Email) {
		email
		passwordHash
		role
		version
	}
}
`

func GetUserInfo(
	ctx_ context.Context,
	client_ graphql.Client,
	Email string,
) (data_ *GetUserInfoResponse, err_ error) {
	req_ := &graphql.Request{
		OpName: "GetUserInfo",
		Query:  GetUserInfo_Operation,
		Variables: &__GetUserInfoInput{
			Email: Email,
		},
	}

	data_ = &GetUserInfoResponse{}
	resp_ := &graphql.Response{Data: data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return data_, err_
}
